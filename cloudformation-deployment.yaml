AWSTemplateFormatVersion: 2010-09-09

Description: Site resources for Shelterly deployment

Parameters:
  LambdaIAMRoleArn:
    Type: String

  DjangoSecretKey:
    Type: String

  DatabaseName:
    Type: String

  DatabaseUser:
    Type: String

  DatabasePassword:
    Type: String

  DatabaseHost:
    Type: String

  LambdaAliasName:
    Type: String

  ApiDomainName:
    Type: String
  
  ImageUri:
    Type: String


Resources:
  LambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      PackageType: Image
      Code:
        ImageUri: !Ref ImageUri
      Environment:
        Variables:
          SECRET_KEY: !Ref DjangoSecretKey
          DATABASE_NAME: !Ref DatabaseName
          DATABASE_PASSWORD: !Ref DatabasePassword
          DATABASE_HOST: !Ref DatabaseHost
          API_HOSTNAME: !Ref ApiDomainName
      ImageConfig:
        Command: ["lambda_awsgi.lambda_handler"]
      MemorySize: 128
      Role: !Ref LambdaIAMRoleArn
      Timeout: 20
      VpcConfig:
        SecurityGroupIds:
        SubnetIds:

  LambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt LambdaFunction.Arn
      Principal: apigateway.amazonaws.com

  LambdaVersion:
    Type: AWS::Lambda::Version
    Properties:
      FunctionName: !Ref LambdaFunction
      Description: dev testing

  myLambdaAlias:
    Type: AWS::Lambda::Alias
    Properties:
      FunctionName: !Ref LambdaFunction
      FunctionVersion: !GetAtt LambdaVersion.Version
      Name: !Ref LambdaAliasName

  HttpApi:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: shelterly-dev
      Description: HTTP API
      ProtocolType: HTTP
 
  HttpApiIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId: !Ref HttpApi
      IntegrationType: AWS_PROXY
      PayloadFormatVersion: 2.0
      IntegrationUri: !Join
                        - ''
                        - - 'arn:aws:apigateway:'
                          - !Ref AWS::Region
                          - ':lambda:path/2015-03-31/functions/'
                          - !GetAtt LambdaFunction.Arn
                          - :${stageVariables.org_name}_${stageVariables.incident_name}/invocations

  HttpApiRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId: !Ref HttpApi
      RouteKey: $default
      Target: !Join
                - /
                - - integrations
                  - !Ref HttpApiIntegration


  DevStage:
    Type: "AWS::ApiGatewayV2::Stage"
    Properties:
      StageName: dev
      Description: dev stage
      AutoDeploy: True
      ApiId: !Ref HttpApi
      StageVariables:
        org_name: nvadg
        incident_name: dev

  ApiDomainName:
    Type: "AWS::ApiGatewayV2::DomainName"
    Properties:
      DomainName: dev.shelterly.org
      DomainNameConfigurations:
        - EndpointType: REGIONAL
          CertificateArn: !Sub arn:aws:acm:${AWS::Region}:${AWS::AccountId}:certificate/c761d629-703e-40dc-8233-5be3937008ea

  MyApiMapping:
    Type: "AWS::ApiGatewayV2::ApiMapping"
    Properties:
      DomainName: !Ref ApiDomainName
      ApiId: !Ref HttpApi
      Stage: !Ref DevStage

  myDNSRecord:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: 
      Name: !Ref ApiDomainName
      Type: A
      AliasTarget:
        DNSName: !GetAtt ApiDomainName.RegionalDomainName
        HostedZoneId: !GetAtt ApiDomainName.RegionalHostedZoneId

  myLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref myLambdaAlias
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${HttpApi}/*
      SourceArn: !Join
                  - ''
                  - - 'arn:aws:execute-api:'
                    - !Ref AWS::Region
                    - ':'
                    - !Ref AWS::AccountId
                    - ':'
                    - !Ref HttpApi
                    - '/*'
