- name: Spin up new client
  vars_files:
    - deploy_vars.yml
  hosts: localhost
  gather_facts: False
  tasks:
    - name: Create a new database for this org+incident combo.
      community.postgresql.postgresql_db:
        name: "{{ org_name }}_{{ incident_name }}"
        login_host: "{{ db_host }}"
        login_user: "{{ db_user }}"
        login_password: "{{ db_password }}"

    - name: Migrate database
      community.docker.docker_container:
        name: shelterly-deploy
        image: trevorskaggs/shelterly:deploy
        command: /bin/bash -c "source ~/shelterly/venv/bin/activate && python ./manage.py migrate --no-input"
        env:
          DATABASE_HOST: "{{ db_host }}"
          DATABASE_NAME: "{{ org_name }}_{{ incident_name }}"
          DATABASE_PASSWORD: "{{ db_password }}"
          DATABASE_USER: "{{ db_user }}"
          SECRET_KEY: "{{ secret_key }}"

    - name: Import resources
      community.docker.docker_container:
        name: shelterly-deploy
        image: trevorskaggs/shelterly:deploy
        command: "/bin/bash -c 'source ~/shelterly/venv/bin/activate && python ~/shelterly/scripts/import-resources.py /tmp/people.csv'"
        volumes:
          - "{{csv_path}}:/tmp/people.csv"
        env:
          DATABASE_HOST: "{{ db_host }}"
          DATABASE_NAME: "{{ org_name }}_{{ incident_name }}"
          DATABASE_PASSWORD: "{{ db_password }}"
          DATABASE_USER: "{{ db_user }}"
          SECRET_KEY: "{{ secret_key }}"
          DJANGO_SETTINGS_MODULE: settings

    - name: Deploy Cloudformation resources
      amazon.aws.cloudformation:
        stack_name: "{{ org_name }}-{{ incident_name }}-stack"
        state: "present"
        region: "us-west-2"
        # replace with S3 url
        template: "cloudformation-deployment.yaml"
        template_parameters:
          DjangoSecretKey: "{{ secret_key }}"
          DatabaseName: "{{ org_name }}_{{ incident_name }}"
          DatabaseUser: "{{ db_user }}"
          DatabasePassword: "{{ db_password }}"
          DatabaseHost: "{{ db_host }}"
          LambdaAliasName: dev_test #"{{ org_name }}_{{ incident_name }}"
          DomainName: "{{org_name}}{{incident_name}}.shelterly.org"
          LambdaIAMRoleArn: "{{ iam_role }}"
          ImageUri: "{{ image_uri }}"
          HZoneId: "{{ hosted_zone_id }}"
          Subnets: "{{ subnets }}"
          SecurityGroups: "{{ security_groups }}"

